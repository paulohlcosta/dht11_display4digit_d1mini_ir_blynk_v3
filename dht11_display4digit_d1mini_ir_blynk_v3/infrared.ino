void botaofisico(){
  boolean thisState = digitalRead(BUTTONPIN);

  if(thisState == false) {
    if(comandodavez == true) ligarAr();
    if(comandodavez == false) desligarAr();
    delay(20);
  }

//quando libera o botao, inverte o comando da vez
  if((thisState == true) and (lastState == false)) {
    comandodavez = !comandodavez;
  }

  lastState = thisState;
}


//COMANDOS PARA AR CONDICIONADO PHILCO 12.000 BTU

void ligarAr() 
{ //cuidar que precisa estar no formato uint16_t
  uint16_t rawData[227] = {3800,1400, 550,1200, 550,1200, 550,500, 550,300, 750,450, 
  550,1200, 550,500, 550,450, 550,1200, 550,1200, 600,450, 550,1200, 550,500, 550,450, 
  550,1200, 550,1200, 600,450, 550,1200, 550,1200, 550,500, 550,450, 600,1150, 600,450,
  550,500, 550,1200, 550,450, 550,500, 550,450, 600,450, 550,500, 550,450, 550,500, 
  550,450, 600,450, 550,500, 550,450, 550,500, 550,450, 550,500, 550,450, 600,450, 
  550,500, 550,1200, 550,450, 600,450, 550,1200, 550,500, 550,450, 550,1200, 550,1200, 
  600,450, 550,500, 550,450, 550,500, 550,450, 550,500, 550,1200, 550,500, 550,1200, 
  550,450, 550,500, 550,450, 600,450, 550,500, 550,450, 550,1200, 550,500, 550,1200, 
  550,500, 550,1200, 550,450, 550,500, 550,450, 600,450, 550,500, 550,450, 550,500, 
  550,450, 600,450, 550,500, 550,450, 550,500, 550,450, 550,500, 550,450, 600,450, 
  550,500, 550,450, 550,1200, 550,500, 550,450, 600,450, 550,500, 550,450, 550,500, 
  550,450, 600,450, 550,500, 550,1200, 550,450, 550,500, 550,450, 600,450, 550,500, 
  550,450, 550,500, 550,450, 600,450, 550,1200, 550,1200, 550,1200, 550,500, 550};  // UNKNOWN 471ACC7C
  irsend.sendRaw(rawData, sizeof(rawData) / sizeof(rawData[0]), 38/*KHz*/); //Note the approach used to automatically calculate the size of the array.
  delay(30);
  Serial.println("recebido comando de LIGAR"); 
}

void desligarAr() 
{ //cuidar que precisa estar no formato uint16_t
  uint16_t rawData[227] = {3800,1400, 550,1200, 550,1200, 550,500, 550,450, 
  550,500, 550,1200, 550,500, 550,450, 550,1200, 550,1200, 550,500, 550,1200, 
  550,500, 550,450, 550,1200, 550,1200, 550,500, 550,1200, 550,1200, 550,500, 
  550,450, 550,1200, 550,500, 550,450, 600,1200, 550,300, 700,300, 750,450, 
  550,500, 550,450, 600,450, 550,500, 550,450, 550,500, 550,450, 600,450, 550,500, 
  550,450, 550,500, 550,450, 550,500, 550,450, 600,450, 550,500, 550,450, 550,1200, 
  550,300, 750,450, 600,1200, 550,1200, 550,1200, 550,450, 550,500, 550,450, 600,450, 
  550,500, 550,1200, 550,1200, 550,1200, 550,450, 600,450, 550,500, 550,450, 550,500, 
  550,450, 550,1200, 600,450, 550,1200, 550,500, 550,450, 550,500, 550,450, 600,450, 
  550,500, 550,450, 550,500, 550,450, 550,500, 550,450, 600,450, 550,500, 550,450, 
  550,500, 550,450, 600,450, 550,500, 550,450, 550,500, 550,1200, 550,450, 600,450, 
  550,500, 550,450, 550,500, 550,450, 550,500, 550,450, 600,450, 550,1200, 550,500, 
  550,450, 550,500, 550,450, 600,450, 550,500, 550,1200, 550,450, 550,500, 550,1200, 
  550,500, 550,1200, 550,450, 550};
  irsend.sendRaw(rawData, sizeof(rawData) / sizeof(rawData[0]), 38/*KHz*/); //Note the approach used to automatically calculate the size of the array.
  delay(30);
  Serial.println("recebido comando de DESLIGAR");  
}
